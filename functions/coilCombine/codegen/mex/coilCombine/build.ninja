# CompilerName=clang
# Mode=optim
ninja_required_version = 1.3

# Basic folders
root = .
builddir = $root/build/maca64
matlabdir = /Applications/MATLAB_R2023b.app
startdir = /Users/gustav/Library/CloudStorage/Dropbox/Reconstruction_and_analysis_tools/Matlab/MRI-apps/Retrospective9/Functions/coilCombine

# Toolchain information
cc = /usr/bin/xcrun -sdk macosx13.3 clang
cxx = /usr/bin/xcrun -sdk macosx13.3 clang++
linker = /usr/bin/xcrun -sdk macosx13.3 clang
linkerxx = /usr/bin/xcrun -sdk macosx13.3 clang++

cflags =  -fno-common -arch arm64 -mmacosx-version-min=11.0 -fexceptions -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -fwrapv -DMATLAB_MEX_FILE -O2 -DNDEBUG -std=c99 -I "$root" -I "$startdir" -I "$root/interface" -I "$matlabdir/extern/include" -I "." -DHAVE_LAPACK_CONFIG_H -DLAPACK_COMPLEX_STRUCTURE -DMW_HAVE_LAPACK_DECLS -DMODEL=coilCombine_mex -c -fPIC -Xpreprocessor -fopenmp -I "$matlabdir/toolbox/eml/externalDependency/omp/maca64/include" -DOpenMP_omp_LIBRARY="$matlabdir/sys/os/maca64/libiomp5.dylib" 

cxxflags =  -fno-common -arch arm64 -mmacosx-version-min=11.0 -fexceptions -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -fwrapv -fobjc-arc -std=c++14 -stdlib=libc++ -DMATLAB_MEX_FILE -O2 -DNDEBUG -std=c++11 -I "$root" -I "$startdir" -I "$root/interface" -I "$matlabdir/extern/include" -I "." -DHAVE_LAPACK_CONFIG_H -DLAPACK_COMPLEX_STRUCTURE -DMW_HAVE_LAPACK_DECLS -DMODEL=coilCombine_mex -c -fPIC -Xpreprocessor -fopenmp -I "$matlabdir/toolbox/eml/externalDependency/omp/maca64/include" -DOpenMP_omp_LIBRARY="$matlabdir/sys/os/maca64/libiomp5.dylib" 

ldflags =  -Wl,-twolevel_namespace -undefined error -arch arm64 -mmacosx-version-min=11.0 -Wl,-syslibroot,/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -bundle   -L"$matlabdir/bin/maca64" -lmx -lmex -lmat -lc++  -Wl,-rpath,@loader_path -o coilCombine_mex.mexmaca64 -L"$matlabdir/bin/maca64" -lmwblas -lmwlapack -lemlrt -lcovrt -lut -lmwmathutil -fPIC -L"$matlabdir/sys/os/maca64" -lomp -Wl,-exported_symbols_list,coilCombine_mex.map

linkobjs = 

# Build Rules
rule cc
    command = $cc $cflags $in -o $out

rule cxx
    command = $cxx $cxxflags $in -o $out

rule link
    command = $linker $in $linkobjs $ldflags

rule linkxx
    command = $linkerxx $in $linkobjs $ldflags

# Build
build $builddir/coilCombine_data.o : cc $root/coilCombine_data.c
build $builddir/rt_nonfinite.o : cc $root/rt_nonfinite.c
build $builddir/coilCombine_initialize.o : cc $root/coilCombine_initialize.c
build $builddir/coilCombine_terminate.o : cc $root/coilCombine_terminate.c
build $builddir/coilCombine.o : cc $root/coilCombine.c
build $builddir/permute.o : cc $root/permute.c
build $builddir/reshapeSizeChecks.o : cc $root/reshapeSizeChecks.c
build $builddir/filter2.o : cc $root/filter2.c
build $builddir/anyNonFinite.o : cc $root/anyNonFinite.c
build $builddir/squeeze.o : cc $root/squeeze.c
build $builddir/svd.o : cc $root/svd.c
build $builddir/_coder_coilCombine_api.o : cc $root/interface/_coder_coilCombine_api.c
build $builddir/_coder_coilCombine_mex.o : cc $root/interface/_coder_coilCombine_mex.c
build $builddir/eml_int_forloop_overflow_check.o : cc $root/eml_int_forloop_overflow_check.c
build $builddir/conv2AXPYSameCMP.o : cc $root/conv2AXPYSameCMP.c
build $builddir/coilCombine_emxutil.o : cc $root/coilCombine_emxutil.c
build $builddir/_coder_coilCombine_info.o : cc $root/interface/_coder_coilCombine_info.c
build $builddir/c_mexapi_version.o : cc $matlabdir/extern/version/c_mexapi_version.c

# Link
build $root/coilCombine_mex.mexmaca64 : link $builddir/coilCombine_data.o $builddir/rt_nonfinite.o $builddir/coilCombine_initialize.o $builddir/coilCombine_terminate.o $builddir/coilCombine.o $builddir/permute.o $builddir/reshapeSizeChecks.o $builddir/filter2.o $builddir/anyNonFinite.o $builddir/squeeze.o $builddir/svd.o $builddir/_coder_coilCombine_api.o $builddir/_coder_coilCombine_mex.o $builddir/eml_int_forloop_overflow_check.o $builddir/conv2AXPYSameCMP.o $builddir/coilCombine_emxutil.o $builddir/_coder_coilCombine_info.o $builddir/c_mexapi_version.o 
